// Demo responses for different commands
const demoResponses = {
    '–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞': '–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ –∑–æ–≤—É—Ç –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –µ–≥–æ —Ü–µ–ª—è—Ö –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö.',
    '–ö—Ç–æ –¥–æ–ª–∂–µ–Ω': '–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä—é... –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ–ª–≥–∏:\n\n‚Ä¢ –ê–Ω–Ω–∞ - 2,500‚ÇΩ –∑–∞ —É—Ä–æ–∫ 28 –∏—é–ª—è\n‚Ä¢ –ú–∏—Ö–∞–∏–ª - 4,000‚ÇΩ –∑–∞ 2 –∑–∞–Ω—è—Ç–∏—è\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?',
    '–î–æ—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü': '–í–∞—à–∏ –¥–æ—Ö–æ–¥—ã –∑–∞ –∏—é–ª—å:\n\nüí∞ –û–±—â–∏–π –¥–æ—Ö–æ–¥: 85,500‚ÇΩ\nüìä –ü—Ä–æ–≤–µ–¥–µ–Ω–æ —É—Ä–æ–∫–æ–≤: 34\nüë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: 12\nüìà –†–æ—Å—Ç –∫ –∏—é–Ω—é: +15%',
    '–£—Ä–æ–∫ —Å –ê–Ω–Ω–æ–π –∑–∞–≤—Ç—Ä–∞ 16:00': '–ó–∞–ø–∏—Å–∞–ª —É—Ä–æ–∫ —Å –ê–Ω–Ω–æ–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ (6 –∞–≤–≥—É—Å—Ç–∞) –≤ 16:00. –ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ —á–∞—Å –¥–æ –∑–∞–Ω—è—Ç–∏—è?',
    '–ü–µ—Ç—Ä –∑–∞–ø–ª–∞—Ç–∏–ª 3000': '–û—Ç–ª–∏—á–Ω–æ! –ó–∞–ø–∏—Å–∞–ª –æ–ø–ª–∞—Ç—É –æ—Ç –ü–µ—Ç—Ä–∞ 3,000‚ÇΩ. –ï–≥–æ –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω. –î–æ–ª–≥–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç! üéâ',
    '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞': '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ (6 –∞–≤–≥—É—Å—Ç–∞):\n\n10:00 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —Å –ú–∞—Ä–∏–Ω–æ–π\n14:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —Å –î–º–∏—Ç—Ä–∏–µ–º\n16:00 - –§–∏–∑–∏–∫–∞ —Å –ê–Ω–Ω–æ–π\n\n–í—Å–µ–≥–æ: 3 —É—Ä–æ–∫–∞',
    '–ü–æ–º–æ—â—å': '–Ø –ø–æ–º–æ–≥–∞—é —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º –±–∏–∑–Ω–µ—Å–æ–º! –ú–æ–≥—É:\n\n‚úÖ –í–µ—Å—Ç–∏ –±–∞–∑—É –∫–ª–∏–µ–Ω—Ç–æ–≤\n‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏—è\n‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–ø–ª–∞—Ç—ã\n‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∞–∂–Ω–æ–º\n‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã\n\n–ü—Ä–æ—Å—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç–µ —Å–æ –º–Ω–æ–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º!'
};

let messageCounter = 0;

function sendDemoMessage(command) {
    const chatMessages = document.getElementById('chatMessages');
    
    // Add user message
    addMessage(command, 'user');
    
    // Add bot response after a delay
    setTimeout(() => {
        const response = demoResponses[command] || '–ü–æ–Ω—è–ª! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...';
        addMessage(response, 'bot');
    }, 1000);
}

function addMessage(text, sender) {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}-message`;
    
    const now = new Date();
    const time = now.getHours() + ':' + (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();
    
    messageDiv.innerHTML = `
        <div class="message-content">${text.replace(/\n/g, '<br>')}</div>
        <div class="message-time">${time}</div>
    `;
    
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

function showDemo() {
    // Scroll to demo section
    document.querySelector('.demo-commands').scrollIntoView({ 
        behavior: 'smooth' 
    });
    
    // Track demo interaction
    gtag('event', 'demo_viewed', {
        'event_category': 'engagement',
        'event_label': 'demo_section'
    });
}

function showOrderForm() {
    // Scroll to order form
    document.querySelector('.pricing').scrollIntoView({ 
        behavior: 'smooth' 
    });
    
    // Focus on telegram input
    setTimeout(() => {
        document.getElementById('telegramInput').focus();
    }, 500);
    
    // Track order form interaction
    gtag('event', 'order_form_viewed', {
        'event_category': 'conversion',
        'event_label': 'order_form_scrolled'
    });
}

function submitOrder() {
    const telegram = document.getElementById('telegramInput').value;
    const question = document.getElementById('questionInput').value;
    
    if (!telegram.trim()) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram –Ω–∏–∫');
        return;
    }
    
    // Basic telegram username validation
    if (!telegram.startsWith('@') && !telegram.includes('t.me/')) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username –∏–ª–∏ —Å—Å—ã–ª–∫—É t.me/username');
        return;
    }
    
    // Here you would normally send the data to your backend
    // For now, we'll just show a success message
    const message = question.trim() 
        ? `–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ Telegram ${telegram} –∏ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.`
        : `–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ Telegram ${telegram} –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ö–ª–∏–µ–Ω—Ç—É—Å–∞.`;
    
    alert(message);
    
    // Track order submission
    gtag('event', 'order_submitted', {
        'event_category': 'conversion',
        'event_label': 'telegram_order',
        'value': 1
    });
    
    // Clear form
    document.getElementById('telegramInput').value = '';
    document.getElementById('questionInput').value = '';
    
    // Change button text
    const button = document.querySelector('.order-form .btn-primary');
    button.textContent = '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!';
    button.disabled = true;
    
    // Reset button after 3 seconds
    setTimeout(() => {
        button.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É';
        button.disabled = false;
    }, 3000);
}

// Track demo command clicks
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('command-btn')) {
        gtag('event', 'demo_command_clicked', {
            'event_category': 'engagement',
            'event_label': e.target.textContent
        });
    }
});

// Initialize demo with welcome message
document.addEventListener('DOMContentLoaded', function() {
    // Add some initial demo messages to make it look more realistic
    setTimeout(() => {
        addMessage('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ —è –ø–æ–Ω–∏–º–∞—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—á—å! üëÜ', 'bot');
    }, 2000);
});